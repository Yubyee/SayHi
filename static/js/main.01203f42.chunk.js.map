{"version":3,"sources":["comp/Graph.js","comp/Main.js","img/image_01.jpg","comp/Company.js","comp/Service.js","App.js","reportWebVitals.js","index.js"],"names":["Graph","d","useState","gData","setGdata","useEffect","className","data","keys","indexBy","margin","top","right","bottom","left","padding","valueScale","type","indexScale","round","valueFormat","format","enabled","colors","scheme","defs","id","background","color","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","Main","subject","Corona","DATA","setData","tit","DESCRIPTION","push","onClick","e","onChange","filter","day","target","value","map","k","border","dataView","Company","images","document","querySelectorAll","console","log","basename","to","Img","image","w","src","img","Service","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.01203f42.chunk.js","sourcesContent":[" //comp > Graph.js\r\nimport {useEffect, useState} from \"react\";\r\nimport \"../App.css\";\r\nimport { ResponsiveBar } from '@nivo/bar';\r\n\r\nexport default function Graph({d}){\r\n    let [gData,setGdata] = useState(d);\r\n    //1차 접종자 - fir_inc, fir_inc1\r\n    //2차 접종자 - scd_inc, scd_inc1    \r\n    useEffect(()=>{\r\n        setGdata (\r\n            [\r\n                {\r\n                    \"country\": \"1차 접종자\",\r\n                    \"hot dog\": d[0]['fir_inc'],\r\n                    \"burger\": d[0]['fir_inc1']\r\n                },\r\n                {     \r\n                    \"country\": \"2차 접종자\",\r\n                    \"hot dog\": d[0]['scd_inc'],\r\n                    \"burger\": d[0]['scd_inc1']\r\n                }\r\n            ]\r\n        );\r\n    },[d]);\r\n    \r\n\r\n    return(\r\n        \r\n        <div className=\"graph\">\r\n            <ResponsiveBar\r\n                data={gData}\r\n                keys={[ 'hot dog','burger']}\r\n                indexBy=\"country\"\r\n                margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n                padding={0.3}\r\n                valueScale={{ type: 'linear' }}\r\n                indexScale={{ type: 'band', round: true }}\r\n                valueFormat={{ format: '', enabled: false }}\r\n                colors={{ scheme: 'nivo' }}\r\n                defs={[\r\n                    {\r\n                        id: 'dots',\r\n                        type: 'patternDots',\r\n                        background: 'inherit',\r\n                        color: '#38bcb2',\r\n                        size: 4,\r\n                        padding: 1,\r\n                        stagger: true\r\n                    },\r\n                    {\r\n                        id: 'lines',\r\n                        type: 'patternLines',\r\n                        background: 'inherit',\r\n                        color: '#eed312',\r\n                        rotation: -45,\r\n                        lineWidth: 6,\r\n                        spacing: 10\r\n                    }\r\n                ]}\r\n                fill={[\r\n                    {\r\n                        match: {\r\n                            id: 'fries'\r\n                        },\r\n                        id: 'dots'\r\n                    },\r\n                    {\r\n                        match: {\r\n                            id: 'sandwich'\r\n                        },\r\n                        id: 'lines'\r\n                    }\r\n                ]}\r\n                borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                axisTop={null}\r\n                axisRight={null}\r\n                axisBottom={{\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: '코로나 예방접종 현황',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 32\r\n                }}\r\n                axisLeft={{\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'food',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -40\r\n                }}\r\n                labelSkipWidth={12}\r\n                labelSkipHeight={12}\r\n                labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                legends={[\r\n                    {\r\n                        dataFrom: 'keys',\r\n                        anchor: 'bottom-right',\r\n                        direction: 'column',\r\n                        justify: false,\r\n                        translateX: 120,\r\n                        translateY: 0,\r\n                        itemsSpacing: 2,\r\n                        itemWidth: 100,\r\n                        itemHeight: 20,\r\n                        itemDirection: 'left-to-right',\r\n                        itemOpacity: 0.85,\r\n                        symbolSize: 20,\r\n                        effects: [\r\n                            {\r\n                                on: 'hover',\r\n                                style: {\r\n                                    itemOpacity: 1\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ]}\r\n             />\r\n        </div>\r\n    );\r\n}\r\n","//Main.js\r\nimport {useState} from \"react\";\r\nimport Corona from \"../data/corona19.json\";\r\nimport Graph from \"./Graph.js\";\r\n\r\nexport default function Main(){\r\n    let subject = [];\r\n    let [data,setData] = useState(Corona.DATA);\r\n\r\n    for(let tit in Corona.DESCRIPTION){\r\n        subject.push(Corona.DESCRIPTION[tit]);\r\n    }    \r\n    function dataChange(e){\r\n        setData(\r\n            Corona.DATA.filter(day => (\r\n                day['s_vc_dt'] == e.target.value\r\n            ))\r\n        );\r\n    }\r\n\r\n    function allBtn(e){\r\n        setData(Corona.DATA);\r\n    }\r\n    \r\n    return(\r\n        <> \r\n            <button onClick={allBtn}>전체보기</button>\r\n            <section>\r\n                <h2>코로나 예방접종 현황</h2>\r\n                <div>\r\n                    <select id=\"day\" onChange={ dataChange}>\r\n                    {\r\n                        Corona.DATA.map(function(data,k){\r\n                            return (\r\n                                <option key={k}>\r\n                                    {data['s_vc_dt']}\r\n                                </option>\r\n                            )\r\n                        })\r\n                    }\r\n                    </select>\r\n                </div>\r\n\r\n                <table border=\"1\">\r\n                <thead>\r\n                    <tr>\r\n                        {\r\n                        subject.map(function(tit,k){\r\n                            return <th key={k}> {tit} </th>;\r\n                        })            \r\n                    }\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        data.map(function(dataView,k){\r\n                            return (\r\n                                <tr key={k}>   \r\n                                    <td>{dataView['scd_inc']}</td>\r\n                                    <td>{dataView['fir_inc1']}</td>\r\n                                    <td>{dataView['fir_inc_rate']}</td>\r\n                                    <td>{dataView['scd_inc1']}</td>\r\n                                    <td>{dataView['s_vc_dt']}</td>\r\n                                    <td>{dataView['scd_inc_rate']}</td>\r\n                                    <td>{dataView['fir_inc']}</td>\r\n                                    <td>{dataView['fir_sub']}</td>\r\n                                </tr>\r\n                            );\r\n                        })\r\n                    }       \r\n                </tbody>\r\n                </table>\r\n            </section>\r\n            <Graph d={data}/>\r\n        </>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/image_01.2d32d353.jpg\";","import Img from \"../data/img.json\";\r\n\r\nimport image01 from \"../img/image_01.jpg\";\r\nimport {BrowserRouter, Link } from \r\n\"react-router-dom\";\r\n\r\nexport default function Company(){\r\n    // console.log(Test);\r\n\r\n    const images = document.querySelectorAll('.images')\r\n\r\n    console.log(images)\r\n\r\n\r\n\r\n    return(\r\n        <BrowserRouter basename=\"/SayHi\">\r\n        <div className=\"warp\"> \r\n            <header className=\"header\">\r\n                <nav>\r\n                    <h1>KAPPE</h1>\r\n                    <ul className=\"menu_list\">\r\n                        <li><Link to=\"/\">HOME</Link></li>\r\n                        <li><Link to=\"/company\">Company</Link></li>\r\n                        <li><Link to=\"/service\">Service</Link></li>\r\n                        <li>BLOG</li>\r\n                        <li>SERVICES</li>\r\n                        <li>CONTACT</li>\r\n                    </ul>\r\n                    <ul>\r\n                        <li>filter</li>\r\n                        <li>wll Works</li>\r\n                        <li>illustration</li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <main>\r\n                <ul>\r\n                {\r\n                    Img.image.map((w,k)=>(\r\n                            <li className=\"images\" key={k}>\r\n                                <img src={w.img}/>\r\n                            </li>                    \r\n                    ))\r\n                }                    \r\n                </ul>                         \r\n            </main>\r\n        </div>\r\n        </BrowserRouter>\r\n    );\r\n}","\r\nexport default function Service(){\r\n    return(\r\n        <div> 서비스 페이지입니다.</div>\r\n    );\r\n}","import './App.css';\nimport Main from './comp/Main';\n        \nimport {BrowserRouter, Route, Switch, Link } from \n\"react-router-dom\";\nimport Company from './comp/Company';\nimport Service from './comp/Service';\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/SayHi\">\n      <header>\n          <Link to=\"/\">HOME</Link>\n          <Link to=\"/company\">Company</Link>\n          <Link to=\"/service\">Service</Link>\n      </header>\n      <Switch>\n        <Route exact path=\"/\"> <Main /> </Route>\n        <Route path=\"/company\"> <Company /> </Route>\n        <Route path=\"/service\"> <Service /> </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}